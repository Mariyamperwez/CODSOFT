import pandas as pd
import re
import string
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

data=pd.read_csv("spam.csv",encoding='latin-1')

print(data.head())
print(data.tail())

print(data.shape)
print(data.info())
print(data.columns)
print("Total messages:", data.shape[0])


data = data.iloc[:, [0, 1]]
data.columns = ['label', 'message']
data['label'] = data['label'].map({'ham': 0, 'spam': 1})

print(data['label'].value_counts())
print(data[['message']].head(10))
def preprocess_text(text):
    text = text.lower()
    text = re.sub(f"[{string.punctuation}]", "", text)
    text = re.sub(r"\d+", "", text)
    return text

data['clean_message'] = data['message'].apply(preprocess_text)
print(data[['message', 'clean_message']].head(10))


X_train, X_test, y_train, y_test = train_test_split(
    data['clean_message'], data['label'], test_size=0.2, random_state=42, stratify=data['label']
)

tfidf_vectorizer = TfidfVectorizer()
X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)
X_test_tfidf = tfidf_vectorizer.transform(X_test)

models = {
    "Na√Øve Bayes": MultinomialNB(),
    "Logistic Regression": LogisticRegression(),
    "SVM": SVC()
}

for name, model in models.items():
    model.fit(X_train_tfidf, y_train)
    y_pred = model.predict(X_test_tfidf)
    print(f"{name} Accuracy: {accuracy_score(y_test, y_pred):.4f}")
    print(classification_report(y_test, y_pred))

def classify_message(text, model):
    text = preprocess_text(text)
    text_tfidf = tfidf_vectorizer.transform([text])
    prediction = model.predict(text_tfidf)
    return "Spam" if prediction[0] == 1 else "Ham"

sample_text = "Win a free iPhone! Click here now!"
print(classify_message(sample_text, models["Logistic Regression"]))
